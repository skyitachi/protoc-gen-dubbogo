// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user/user.proto

package user

import (
	context "context"
	fmt "fmt"
	config "github.com/apache/dubbo-go/config"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	errors "github.com/pkg/errors"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type UserRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserRequest) Reset()         { *m = UserRequest{} }
func (m *UserRequest) String() string { return proto.CompactTextString(m) }
func (*UserRequest) ProtoMessage()    {}
func (*UserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{0}
}

func (m *UserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserRequest.Unmarshal(m, b)
}
func (m *UserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserRequest.Marshal(b, m, deterministic)
}
func (m *UserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserRequest.Merge(m, src)
}
func (m *UserRequest) XXX_Size() int {
	return xxx_messageInfo_UserRequest.Size(m)
}
func (m *UserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserRequest proto.InternalMessageInfo

func (m *UserRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type UserReply struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Age                  int32                `protobuf:"varint,3,opt,name=age,proto3" json:"age,omitempty"`
	Time                 *timestamp.Timestamp `protobuf:"bytes,4,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *UserReply) Reset()         { *m = UserReply{} }
func (m *UserReply) String() string { return proto.CompactTextString(m) }
func (*UserReply) ProtoMessage()    {}
func (*UserReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{1}
}

func (m *UserReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserReply.Unmarshal(m, b)
}
func (m *UserReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserReply.Marshal(b, m, deterministic)
}
func (m *UserReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserReply.Merge(m, src)
}
func (m *UserReply) XXX_Size() int {
	return xxx_messageInfo_UserReply.Size(m)
}
func (m *UserReply) XXX_DiscardUnknown() {
	xxx_messageInfo_UserReply.DiscardUnknown(m)
}

var xxx_messageInfo_UserReply proto.InternalMessageInfo

func (m *UserReply) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UserReply) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserReply) GetAge() int32 {
	if m != nil {
		return m.Age
	}
	return 0
}

func (m *UserReply) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func init() {
	proto.RegisterType((*UserRequest)(nil), "user.UserRequest")
	proto.RegisterType((*UserReply)(nil), "user.UserReply")
}

func init() { proto.RegisterFile("user/user.proto", fileDescriptor_ed89022014131a74) }

var fileDescriptor_ed89022014131a74 = []byte{
	// 210 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x8f, 0xc1, 0x4a, 0xc4, 0x30,
	0x10, 0x86, 0x4d, 0x37, 0x2a, 0x3b, 0x2b, 0xae, 0xce, 0x29, 0x14, 0xc4, 0xd2, 0x53, 0x4f, 0x09,
	0xac, 0x0f, 0xe0, 0xd1, 0xab, 0x04, 0x7d, 0x80, 0x2e, 0x1d, 0x4b, 0xa0, 0x35, 0xd9, 0x24, 0x15,
	0xfa, 0xf6, 0x92, 0x94, 0x42, 0xd9, 0x4b, 0xf8, 0xf9, 0x66, 0xc8, 0xff, 0x0d, 0x1c, 0xa7, 0x40,
	0x5e, 0xa5, 0x47, 0x3a, 0x6f, 0xa3, 0x45, 0x9e, 0x72, 0xf9, 0xda, 0x5b, 0xdb, 0x0f, 0xa4, 0x32,
	0x3b, 0x4f, 0x3f, 0x2a, 0x9a, 0x91, 0x42, 0x6c, 0x47, 0xb7, 0xac, 0xd5, 0x2f, 0x70, 0xf8, 0x0e,
	0xe4, 0x35, 0x5d, 0x26, 0x0a, 0x11, 0x1f, 0xa1, 0x30, 0x9d, 0x60, 0x15, 0x6b, 0xf6, 0xba, 0x30,
	0x5d, 0x7d, 0x81, 0xfd, 0x32, 0x76, 0xc3, 0x7c, 0x3d, 0x44, 0x04, 0xfe, 0xdb, 0x8e, 0x24, 0x8a,
	0x4c, 0x72, 0xc6, 0x27, 0xd8, 0xb5, 0x3d, 0x89, 0x5d, 0xc5, 0x9a, 0x5b, 0x9d, 0x22, 0x4a, 0xe0,
	0xa9, 0x54, 0xf0, 0x8a, 0x35, 0x87, 0x53, 0x29, 0x17, 0x23, 0xb9, 0x1a, 0xc9, 0xaf, 0xd5, 0x48,
	0xe7, 0xbd, 0xd3, 0x3b, 0x3c, 0xa4, 0xca, 0x4f, 0x6f, 0xff, 0x4c, 0x47, 0x1e, 0x15, 0xdc, 0x7f,
	0x50, 0x4c, 0x08, 0x9f, 0x65, 0x3e, 0x70, 0x23, 0x5c, 0x1e, 0xb7, 0xc8, 0x0d, 0x73, 0x7d, 0x73,
	0xbe, 0xcb, 0x5f, 0xbf, 0xfd, 0x07, 0x00, 0x00, 0xff, 0xff, 0x79, 0x80, 0x75, 0x91, 0x13, 0x01,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.

type UserProvider struct {
	GetUser func(ctx context.Context, in *UserRequest, out *UserReply) error
}

func (UserProvider) Reference() string {
	return "UserProvider"
}

func NewUserProvider() *UserProvider {
	client := new(UserProvider)
	config.SetConsumerService(client)
	return client
}

type UserProviderServer interface {
	GetUser(ctx context.Context, in *UserRequest) (*UserReply, error)

	Reference() string
}

type UnimplementedUserProviderServer struct {
}

func (*UnimplementedUserProviderServer) GetUser(ctx context.Context, in *UserRequest) (*UserReply, error) {
	return nil, errors.New("not implemented")
}

func (*UnimplementedUserProviderServer) Reference() string {
	return "UserProvider"
}

type UserProviderServerStub struct {
	stub UserProviderServer
}

func (s *UserProviderServerStub) GetUser(ctx context.Context, data []byte) (*UserReply, error) {
	req := &UserRequest{}
	buf := proto.Buffer{}
	buf.SetBuf(data)
	if err := buf.Unmarshal(req); err != nil {
		return nil, err
	}
	return s.stub.GetUser(ctx, req)
}

func (*UserProviderServerStub) Reference() string {
	return "UserProvider"
}

func newUserProviderServerStub(service UserProviderServer) *UserProviderServerStub {
	return &UserProviderServerStub{stub: service}
}

func RegisterProvider(service UserProviderServer) {
	stub := newUserProviderServerStub(service)
	config.SetProviderService(stub)
}
